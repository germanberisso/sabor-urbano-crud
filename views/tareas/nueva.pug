extends ../layout

block content
  - var page = 'tareas'
  
  .row.mb-4
    .col-12
      h1.display-6
        i.fas.fa-plus.text-primary.me-3
        | Nueva Tarea

  .row
    .col-lg-6
      .card
        .card-body
          form#tareaForm(action="/api/tareas", method="POST")
            .mb-3
              label.form-label(for="titulo") Título
              input.form-control(type="text", id="titulo", name="titulo", required)
            .mb-3
              label.form-label(for="descripcion") Descripción
              textarea.form-control(id="descripcion", name="descripcion", rows="4")
            .mb-3
              label.form-label(for="area") Área
              select.form-control(id="area", name="area", required)
                option(value="") Seleccione un área
                option(value="gestion_pedidos") Gestión Pedidos
                option(value="control_inventario") Control Inventario
            .mb-3
              label.form-label(for="estado") Estado
              select.form-control(id="estado", name="estado")
                option(value="pendiente" selected) Pendiente
                option(value="en_proceso") En Proceso
                option(value="finalizada") Finalizada
            .mb-3
              label.form-label(for="prioridad") Prioridad
              select.form-control(id="prioridad", name="prioridad")
                option(value="media" selected) Media
                option(value="alta") Alta
                option(value="baja") Baja
            .mb-3
              label.form-label(for="empleadoAsignado") Empleado Asignado
              select.form-control(id="empleadoAsignado", name="empleadoAsignado")
                option(value="") Sin asignar
                each emp in empleados
                  //- SOLUCIÓN: El `value` debe ser `emp._id` (propiedad de MongoDB) y no `emp.id`.
                  option(value=emp._id) #{emp.nombre} #{emp.apellido}
            .mb-3
              label.form-label(for="pedidoAsociado") Pedido Asociado
              input.form-control(type="number", id="pedidoAsociado", name="pedidoAsociado")
            .mb-3
              label.form-label(for="observaciones") Observaciones
              textarea.form-control(id="observaciones", name="observaciones", rows="4")
            .d-grid
              button.btn.btn-primary(type="submit")
                i.fas.fa-save.me-2
                | Crear Tarea
      a.btn.btn-outline-secondary.mt-3(href="/tareas")
        i.fas.fa-arrow-left.me-2
        | Volver
    script.
      document.getElementById('tareaForm').addEventListener('submit', async (e) => {
        e.preventDefault();
        const formData = new FormData(e.target);
        const data = Object.fromEntries(formData);
        
        try {
          const response = await fetch('/api/tareas', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify(data)
          });
          const result = await response.json();
          if (response.ok && result.success) {
            alert('Tarea creada exitosamente');
            window.location.href = '/tareas';
          } else {
            // El mensaje de error ahora vendrá del backend con más detalles.
            alert(`Error: ${result.message || 'No se pudo crear la tarea'}`);
          }
        } catch (error) {
          alert('Error de conexión al crear la tarea.');
        }
      });